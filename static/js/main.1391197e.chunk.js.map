{"version":3,"sources":["Components/SearchBar/SearchBar.js","Components/Track/Track.js","Components/TrackList/TrackList.js","Components/SearchResults/SearchResults.js","Components/Playlist/Playlist.js","Components/App/App.js","reportWebVitals.js","index.js"],"names":["SearchBar","className","placeholder","React","Component","Track","props","addTrack","bind","this","isRemoval","onClick","onAdd","track","name","artist","album","renderAction","TrackList","tracks","map","id","SearchResults","searchResults","Playlist","defaultValue","playlistTracks","App","state","playlistName","find","savedTrack","push","setState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1391197e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./SearchBar.css\";\n\nexport default class SearchBar extends React.Component {\n  render() {\n    return (\n      <div className=\"SearchBar\">\n        <input placeholder=\"Enter A Song, Album, or Artist\" />\n        <button className=\"SearchButton\">SEARCH</button>\n      </div>\n    );\n  }\n}\n","import React  from \"react\";\nimport \"./Track.css\";\n\nclass Track extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addTrack = this.addTrack.bind(this);\n  }\n\n  renderAction() {\n    if (this.props.isRemoval) {\n      return <button className=\"Track-action\">-</button>;\n    } else {\n      return <button className=\"Track-action\" onClick={this.addTrack}>+</button>;\n    }\n  }\n\n  addTrack(props) {\n    this.props.onAdd(this.props.track);\n  }\n\n  render() {\n    return (\n      <div className=\"Track\">\n        <div className=\"Track-information\">\n          <h3>{this.props.track.name}</h3>\n          <p>{this.props.track.artist} | {this.props.track.album} </p>\n        </div>\n        {this.renderAction()}\n      </div>\n    )\n  }\n}\n\nexport default Track;\n","import React from \"react\";\nimport Track from \"../Track/Track.js\";\nimport \"./TrackList.css\";\n\nexport default class TrackList extends React.Component {\n  render() {\n    return (\n      <div className=\"TrackList\">\n        {this.props.tracks.map((track) => {\n          return <Track track={track} key={track.id} onAdd={this.props.onAdd}/>;\n        })}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport TrackList from \"../TrackList/TrackList\";\nimport \"./SearchResults.css\";\n\nexport default class SearchResults extends React.Component {\n  render() {\n    return (\n      <div className=\"SearchResults\">\n        <h2>Results</h2>\n        <TrackList tracks={this.props.searchResults} onAdd={this.props.onAdd} isRemoval={false}/>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport TrackList from \"../TrackList/TrackList.js\";\nimport \"./Playlist.css\";\n\nexport default class Playlist extends React.Component {\n  render() {\n    return (\n      <div className=\"Playlist\">\n        <input defaultValue={\"New Playlist\"} />\n        <TrackList tracks={this.props.playlistTracks}/>\n        <button className=\"Playlist-save\">SAVE TO SPOTIFY</button>\n      </div>\n    );\n  }\n}\n","//import logo from './logo.svg';\nimport React from \"react\";\nimport \"./App.css\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport SearchResults from \"../SearchResults/SearchResults\";\nimport Playlist from \"../Playlist/Playlist\";\n//import { ReactComponent } from \"*.svg\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchResults: [\n        { name: \"name1\", artist: \"artist1\", album: \"album1\", id: 1 },\n        { name: \"name2\", artist: \"artist2\", album: \"album2\", id: 2 },\n        { name: \"name3\", artist: \"artist3\", album: \"album3\", id: 3 },\n      ],\n      playlistName: \"Playlist Name\",\n      playlistTracks: [\n        {\n          name: \"playlistName1\",\n          artist: \"playlistartist4\",\n          album: \"album4\",\n          id: 4,\n        },\n        {\n          name: \"playlistName3\",\n          artist: \"playlistartist5\",\n          album: \"album5\",\n          id: 5,\n        },\n        {\n          name: \"playListName3\",\n          artist: \"playlist artist6\",\n          album: \"album6\",\n          id: 6,\n        },\n      ],\n    };\n    this.addTrack = this.addTrack.bind(this);\n  }\n\n  addTrack(track) {\n    let tracks = this.state.playlistTracks;\n    if (tracks.find((savedTrack) => savedTrack.id === track.id)) {\n      return;\n    }\n    tracks.push(track);\n    this.setState({playlistTracks: tracks});\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>\n          Ja<span className=\"highlight\">mmm</span>ing\n        </h1>\n        <div className=\"App\">\n          <SearchBar />\n          <div className=\"App-playlist\">\n            <SearchResults\n              searchResults={this.state.searchResults}\n              onAdd={this.addTrack}\n            />\n            <Playlist\n              playlistName={this.state.playlistName}\n              playlistTracks={this.state.playlistTracks}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}