{"version":3,"sources":["Components/SearchBar/SearchBar.js","Components/Track/Track.js","Components/TrackList/TrackList.js","Components/SearchResults/SearchResults.js","Components/Playlist/Playlist.js","Components/App/App.js","reportWebVitals.js","index.js"],"names":["SearchBar","props","state","term","search","bind","handleTermChange","this","onSearch","event","setState","target","value","className","placeholder","onChange","React","Component","Track","addTrack","removeTrack","isRemoval","onClick","onAdd","track","onRemove","name","artist","album","renderAction","TrackList","tracks","map","id","SearchResults","searchResults","Playlist","handleNameChange","onNameChange","defaultValue","playlistTracks","onSave","App","playlistName","updatePlaylistName","savePlaylist","find","savedTrack","push","filter","uri","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f039628.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./SearchBar.css\";\n\nexport default class SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      term: '',\n    }\n    this.search = this.search.bind(this);\n    this.handleTermChange = this.handleTermChange.bind(this);\n  }\n  search() {\n    this.props.onSearch(this.state.term);\n  }\n  handleTermChange(event) {\n    this.setState({term: event.target.value});\n  }\n  render() {\n    return (\n      <div className=\"SearchBar\">\n        <input placeholder=\"Enter A Song, Album, or Artist\" onChange={this.handleTermChange} />\n        <button className=\"SearchButton\">SEARCH</button>\n      </div>\n    );\n  }\n}\n","import React  from \"react\";\nimport \"./Track.css\";\n\nclass Track extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n  }\n\n  renderAction() {\n    if (this.props.isRemoval) {\n      return <button className=\"Track-action\" onClick={this.removeTrack}>-</button>;\n    } else {\n      return <button className=\"Track-action\" onClick={this.addTrack}>+</button>;\n    }\n  }\n\n  addTrack(props) {\n    this.props.onAdd(this.props.track);\n  }\n\n  removeTrack(props) {\n    this.props.onRemove(this.props.track);\n  }\n\n  render() {\n    return (\n      <div className=\"Track\">\n        <div className=\"Track-information\">\n          <h3>{this.props.track.name}</h3>\n          <p>{this.props.track.artist} | {this.props.track.album} </p>\n        </div>\n        {this.renderAction()}\n      </div>\n    )\n  }\n}\n\nexport default Track;\n","import React from \"react\";\nimport Track from \"../Track/Track.js\";\nimport \"./TrackList.css\";\n\nexport default class TrackList extends React.Component {\n  render() {\n    return (\n      <div className=\"TrackList\">\n        {this.props.tracks.map((track) => {\n          return <Track track={track} key={track.id} onAdd={this.props.onAdd} onRemove={this.props.onRemove} isRemoval={this.props.isRemoval}/>;\n        })}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport TrackList from \"../TrackList/TrackList\";\nimport \"./SearchResults.css\";\n\nexport default class SearchResults extends React.Component {\n\n  render() {\n    return (\n      <div className=\"SearchResults\">\n        <h2>Results</h2>\n        <TrackList tracks={this.props.searchResults} onAdd={this.props.onAdd} isRemoval={false}/>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport TrackList from \"../TrackList/TrackList.js\";\nimport \"./Playlist.css\";\n\nexport default class Playlist extends React.Component {\n  constructor(props) {\n    super(props);\n     this.handleNameChange = this.handleNameChange.bind(this);\n  }\n  handleNameChange(event) {\n    this.props.onNameChange(event.target.value);\n  }\n  render() {\n    return (\n      <div className=\"Playlist\">\n        <input defaultValue={\"New Playlist\"} onChange={this.handleNameChange} />\n        <TrackList\n          tracks={this.props.playlistTracks}\n          onRemove={this.props.onRemove}\n          isRemoval={true}\n        />\n        <button className=\"Playlist-save\" onClick={this.props.onSave}>SAVE TO SPOTIFY</button>\n      </div>\n    );\n  }\n}\n","//import logo from './logo.svg';\nimport React from \"react\";\nimport \"./App.css\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport SearchResults from \"../SearchResults/SearchResults\";\nimport Playlist from \"../Playlist/Playlist\";\n//import { ReactComponent } from \"*.svg\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchResults: [\n        { name: \"name1\", artist: \"artist1\", album: \"album1\", id: 1 },\n        { name: \"name2\", artist: \"artist2\", album: \"album2\", id: 2 },\n        { name: \"name3\", artist: \"artist3\", album: \"album3\", id: 3 },\n      ],\n      playlistName: \"Playlist Name\",\n      playlistTracks: [\n        {\n          name: \"playlistName1\",\n          artist: \"playlistartist4\",\n          album: \"album4\",\n          id: 4,\n        },\n        {\n          name: \"playlistName3\",\n          artist: \"playlistartist5\",\n          album: \"album5\",\n          id: 5,\n        },\n        {\n          name: \"playListName3\",\n          artist: \"playlist artist6\",\n          album: \"album6\",\n          id: 6,\n        },\n      ],\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n  addTrack(track) {\n    let tracks = this.state.playlistTracks;\n    if (tracks.find((savedTrack) => savedTrack.id === track.id)) {\n      return;\n    }\n    tracks.push(track);\n    this.setState({playlistTracks: tracks});\n  }\n\n  removeTrack(track) {\n    let tracks = this.state.playlistTracks.filter(savedTrack => track.id !== savedTrack.id);\n    this.setState({ playlistTracks: tracks });\n  }\n\n  updatePlaylistName(name) {\n    this.setState({playlistName: name});\n  }\n\n  savePlaylist() {\n    let trackURIs = this.state.playlistTracks.map(track => track.uri);\n  }\n\n  search(term) {\n    console.log(term);\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>\n          Ja<span className=\"highlight\">mmm</span>ing\n        </h1>\n        <div className=\"App\">\n          <SearchBar onSearch={this.search}/>\n          <div className=\"App-playlist\">\n            <SearchResults\n              searchResults={this.state.searchResults}\n              onAdd={this.addTrack}\n            />\n            <Playlist\n              playlistName={this.state.playlistName}\n              playlistTracks={this.state.playlistTracks}\n              onRemove={this.removeTrack}\n              onNameChange={this.updatePlaylistName}\n              onSave={this.savePlaylist}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}